import os
from VCXProj import VCXProj 

LIBCCSources = [
	"src/alloc.c",
	"src/array.c",
	"src/queue.c",
	"src/buf.c",
	"src/string.c",
	"src/url.c",
	"src/UTF.c",
	"src/uuid.c",
	"src/crc.c",
	"src/list.c",
	"src/hmap.c",
	"src/logger.c",
	"src/syslog.c",
	"src/rand.c",
	"src/rbtree.c",
	"src/ring.c",
	"src/atomic/atomic.c",
	"src/atomic/rwlock.c",
	"src/core/file.c",
	"src/core/generic.c",
	"src/core/cpu_info.c",
	"src/core/windows/sys_mmap.c",
	"src/core/windows/sys_pipe.c",
	"src/core/windows/sys_windows.c",
	"src/core/windows/sys_clipboard.c",
	"src/core/windows/sys_dirent.c",
	"src/core/windows/sys_file.c",
	"src/core/windows/sys_locale.c",
	"src/crypto/des.c",
	"src/crypto/aes.c",
	"src/crypto/base16.c",
	"src/crypto/base58.c",
	"src/crypto/base64.c",
	"src/crypto/hmac.c",
	"src/crypto/md2.c",
	"src/crypto/md4.c",
	"src/crypto/md5.c",
	"src/crypto/sha1.c",
	"src/crypto/sha256.c",
	"src/crypto/sha512.c",
	"src/crypto/xxtea.c",
	"src/loadso/windows/sys_loadso.c",
	"src/power/power.c",
	"src/power/windows/sys_power.c",
	"src/socket/inet.c",
	"src/socket/socket.c",
	"src/socket/windows/sys_socket.c",
	"src/thread/thread.c",
	"src/thread/windows/sys_cond.c",
	"src/thread/windows/sys_mutex.c",
	"src/thread/windows/sys_sem.c",
	"src/thread/windows/sys_thread.c",
	"src/time/strptime.c",
	"src/time/time.c",
	"src/time/windows/sys_time.c"
]
LIBCCHeaders = [
	"include/libcc/alloc.h",
	"include/libcc/array.h",
	"include/libcc/atomic.h",
	"include/libcc/buf.h",
	"include/libcc/generic.h",
	"include/libcc/core/compiler.h",
	"include/libcc/core/platform.h",
	"include/libcc/core/cpu_info.h",
	"include/libcc/core/file.h",
	"include/libcc/core/windows/sys_flock.h",
	"include/libcc/dirent.h",
	"include/libcc/list.h",
	"include/libcc/endian.h",
	"include/libcc/crc.h",
	"include/libcc/loadso.h",
	"include/libcc/logger.h",
	"include/libcc/syslog.h",
	"include/libcc/math.h",
	"include/libcc/mutex.h",
	"include/libcc/power.h",
	"include/libcc/rand.h",
	"include/libcc/rbtree.h",
	"include/libcc/ring.h",
	"include/libcc/queue.h",
	"include/libcc/socket/socket.h",
	"include/libcc/socket/windows/sys_iocp.h",
	"include/libcc/socket/windows/sys_socket.h",
	"include/libcc/string.h",
	"include/libcc/hmap.h",
	"include/libcc/tchar.h",
	"include/libcc/thread.h",
	"include/libcc/thread/sys_thread.h",
	"include/libcc/thread/windows/sys_thread.h",
	"include/libcc/time.h",
	"include/libcc/types.h",
	"include/libcc/url.h",
	"include/libcc/UTF.h",
	"include/libcc/uuid.h",
	"include/libcc/version.h",
	"include/libcc.h",
	"include/libcc/crypto/aes.h",
	"include/libcc/crypto/des.h",
	"include/libcc/crypto/base16.h",
	"include/libcc/crypto/base58.h",
	"include/libcc/crypto/base64.h",
	"include/libcc/crypto/md2.h",
	"include/libcc/crypto/md4.h",
	"include/libcc/crypto/md5.h",
	"include/libcc/crypto/hmac.h",
	"include/libcc/crypto/sha.h",
	"include/libcc/crypto/xxtea.h",
	"include/libcc/core/windows.h",
	"include/libcc/core/windows/sys_mmap.h"
]

if __name__ == "__main__":
	vcxproj = VCXProj("libcc","StaticLibrary","../../Proj.Win/")
	vcxproj.OutDir = "..\\lib"

	vcxproj.addIncludePath(["C:\\240216\\third-party","C:\\240216\\01\\include"])
	vcxproj.addLibraryPath(["C:\\240216\\third-party\\lib\\$(Platform)\\$(Configuration)","C:\\240216\\01\\lib\\$(Platform)\\$(Configuration)"])
	vcxproj.addSource(LIBCCSources)
	vcxproj.addHeader(LIBCCHeaders)
	vcxproj.addMacros("Debug",["_LIB"])
	vcxproj.addMacros("Release",["_LIB"])
	vcxproj.build()



